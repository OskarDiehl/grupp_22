Index: rogue_like/src/main/java/Room.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//TODO organisera metoder, alla enemy metoder borde vara ihop exempelvis.\r\n\r\n//TODO lös ett bra sätt att ta fram om rummet ska vara ett LuckyWheel eller inte\r\n\r\n//TODO lös ett sätt för att generera ett random element för rummet (om det inte är ett luckywheel rum)\r\n\r\n//TODO rummet måste kunna komma åt en players \"medaljonger\" för att avgöra om det blir boss eller inte\r\n\r\n//TODO ändra spawnItem till att inte vara random\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Room {\r\n\r\n    private final Item[] ITEMS = new Item[]{\r\n            new Weapon(\"Boring Sword\", 1, 0),\r\n            new Weapon(\"Cool Sword\", 3,-1),\r\n            new Weapon(\"Mega Hammer\", 10,-5),\r\n            new Weapon(\"Dinky Hammer\",-1,0),\r\n            new Weapon(\"Cast Iron Frying Pan\", 4, -2),\r\n\r\n            new Armor(\"Knight's Armor\", 4, -2),\r\n            new Armor(\"Leather Scrap Armor\", 1, 0),\r\n            new Armor(\"Wearable Bank Vault\", 10, -10),\r\n            new Armor(\"Bussiness Casual\", 0, 0),\r\n            new Armor(\"Birthday Suit\", 0, 0),\r\n\r\n            new Shoes(\"Flip Flops\", 1, -1),\r\n            new Shoes(\"Sneakers\", 3, 0),\r\n            new Shoes(\"Yeezys\", 4, -1),\r\n            new Shoes(\"Clogs\", 2, -3),\r\n            new Shoes(\"Stilettos\", 8, -4)\r\n\r\n    };\r\n\r\n\r\n     private final int MIN_THRESHOLD = 1;\r\n     private final int AMOUNT_OF_ELEMENTS = 4;\r\n\r\n     private final int MAX_AMOUNT_OF_ENEMIES = 7;\r\n     private final int MIN_AMOUNT_OF_ENEMIES = 4;\r\n     private final int MAX_NUMBER_LUCKY_WHEEL = 5;\r\n\r\n     private ArrayList<Enemy> enemies; //denna ska ändras till en arraylist efter funderande\r\n     private int enemyQuantity;\r\n     private String roomType;\r\n     private Element element;\r\n     private int threshold;\r\n     private Player player;\r\n\r\n     //TODO borde player vara ett argument i konstruktorn?\r\n\r\n     public Room(){\r\n         this(new Player(\"test\",new FireElement(1), Role.Tank));\r\n     }\r\n\r\n     public Room(Player player , Element element){\r\n         this.element = element;\r\n         this.player = player;\r\n         buildRoom();\r\n     }\r\n\r\n\r\n     public Room(Player player){\r\n         this.player = player;\r\n         this.element = decideTypeOfElement(generateRandomNumber(MIN_THRESHOLD, AMOUNT_OF_ELEMENTS));\r\n         buildRoom();\r\n\r\n\r\n     }\r\n\r\n    private void buildRoom(){\r\n        decideTypeOfRoom(decideIfLuckyWheel());\r\n\r\n        switch(roomType) {\r\n            case \"Enemy\": spawnEnemies(); break;\r\n            case \"Boss\": spawnBoss(); break;\r\n            case \"Lucky Wheel\": spawnLuckyWheel(); break;\r\n        }\r\n    }\r\n\r\n    public String decideTypeOfRoom(boolean isItLuckyWheel){\r\n        if( (isItLuckyWheel)){\r\n            roomType = \"Lucky Wheel\";\r\n        }\r\n        else {\r\n\r\n            if (shouldBossSpawn()){\r\n                roomType = \"Boss\";\r\n            }\r\n\r\n            else {\r\n                roomType = \"Enemy\";\r\n            }\r\n        }\r\n        return roomType;\r\n    }\r\n\r\n\r\n    private boolean decideIfLuckyWheel(){\r\n        if(generateRandomNumber(MIN_THRESHOLD, MAX_NUMBER_LUCKY_WHEEL) == MAX_NUMBER_LUCKY_WHEEL){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    public Element decideTypeOfElement(int elementNumber){ //denna är private eftersom jag endast vill att ett element ska kunna kallas på en gång\r\n\r\n        if(element == null) {\r\n\r\n            switch (elementNumber) {\r\n                case 1:\r\n                    element = new FireElement(1);\r\n                    break;\r\n                case 2:\r\n                    element = new WaterElement(1);\r\n                    break;\r\n                case 3:\r\n                    element = new WindElement(1);\r\n                    break;\r\n                case 4:\r\n                    element = new EarthElement(1);\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return element;\r\n\r\n    }\r\n\r\n    public void spawnEnemies(){\r\n        enemyQuantity = generateAmountOfEnemies();\r\n        enemies = new ArrayList();\r\n\r\n        for(int i = 0; i < enemyQuantity; i++){\r\n            enemies.add(new Enemy(getElement() , 1, this));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public boolean shouldBossSpawn(){\r\n         int medallions =0;\r\n         String elementName = getElement().getClass().getName();\r\n         if(elementName.equals(\"FireElement\"))\r\n             medallions = player.getFireMedallions();\r\n         else if(elementName.equals(\"EarthElement\"))\r\n             medallions = player.getEarthMedallions();\r\n\r\n         if(medallions == 3){\r\n             return true;\r\n         }\r\n         return false;\r\n     }\r\n\r\n    public void spawnBoss(){\r\n\r\n    }\r\n\r\n\r\n    //TODO göra en klass för lucky wheel?\r\n    public void spawnLuckyWheel(){\r\n\r\n\r\n    }\r\n\r\n    public Item spawnItem(){\r\n         return ITEMS[generateRandomNumber(1,ITEMS.length-1)];\r\n     }\r\n\r\n\r\n    public Player getPlayer() {\r\n        return player;\r\n    }\r\n\r\n    public Element getElement() {\r\n        return element;\r\n    }\r\n\r\n    public ArrayList<Enemy> getEnemies(){\r\n        return enemies;\r\n    }\r\n\r\n    public boolean isEnemiesDead() {\r\n        if (enemies.isEmpty()) {\r\n            return true;\r\n        }\r\n        return false;\r\n     }\r\n\r\n    public int generateAmountOfEnemies(){\r\n         return generateRandomNumber(MIN_AMOUNT_OF_ENEMIES, MAX_AMOUNT_OF_ENEMIES);\r\n     }\r\n\r\n    public String getRoomType() {\r\n        return roomType;\r\n    }\r\n\r\n    public int getEnemyQuantity() {\r\n        return enemyQuantity;\r\n    }\r\n\r\n    //TODO måste denna kallas på av enemy klassen? när dennes hp går ner till 0? Isåfall måste man deklarera Enemy med ett Room kanske?\r\n    //TODO man måste kanske ha något sätt att kolla så att enemyn faktiskt finns?\r\n\r\n    public void removeEnemy(Enemy enemy){\r\n\r\n         if(!enemies.isEmpty()){\r\n             if(enemies.remove(enemy)){\r\n\r\n                 if(isEnemiesDead()){\r\n                     spawnItem();\r\n                 }\r\n                 return;\r\n             }\r\n             else {\r\n                 throw new IllegalArgumentException();\r\n             }\r\n         }\r\n    }\r\n\r\n    public Item[] getITEMS() {\r\n        return ITEMS;\r\n    }\r\n\r\n    //Denna nås av test genom andra metoder, men kan inte testas direkt eftersom den är privat.\r\n    //Man bör fråga sig om denna bör vara publik, samt att den har begränsingar (MIN <= MAX exempelvis)\r\n    public int generateRandomNumber(int min, int max) {\r\n\r\n\r\n        if (min < 1  || max < 1 || min > max) {\r\n            throw new IllegalArgumentException();\r\n        } else {\r\n            max+=1;\r\n\r\n            return (int) ((Math.random() * (max - min)) + min);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- rogue_like/src/main/java/Room.java	(revision 8f031caf8bef2477b800a999f4dc01d1b7842f13)
+++ rogue_like/src/main/java/Room.java	(date 1604181463432)
@@ -9,6 +9,7 @@
 //TODO ändra spawnItem till att inte vara random
 
 import java.util.ArrayList;
+import java.util.Arrays;
 
 public class Room {
 
@@ -147,6 +148,7 @@
     public boolean shouldBossSpawn(){
          int medallions =0;
          String elementName = getElement().getClass().getName();
+         player.fetchMedallionStatus()
          if(elementName.equals("FireElement"))
              medallions = player.getFireMedallions();
          else if(elementName.equals("EarthElement"))
@@ -183,7 +185,7 @@
     }
 
     public ArrayList<Enemy> getEnemies(){
-        return enemies;
+        return new ArrayList<Enemy>(enemies);
     }
 
     public boolean isEnemiesDead() {
@@ -225,7 +227,7 @@
     }
 
     public Item[] getITEMS() {
-        return ITEMS;
+        return Arrays.copyOf(ITEMS, ITEMS.length);
     }
 
     //Denna nås av test genom andra metoder, men kan inte testas direkt eftersom den är privat.
